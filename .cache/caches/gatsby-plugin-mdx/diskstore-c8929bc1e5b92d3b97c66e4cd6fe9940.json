{"expireTime":9007200818910844000,"key":"gatsby-plugin-mdx-entire-payload-c883d9b0d3d7828d2fa4d55c1f021d60-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import { CodeWave } from \"gatsby-theme-waves\"","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":46,"offset":46},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":4,"column":1,"offset":48},"end":{"line":4,"column":4,"offset":51},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Test automation","position":{"start":{"line":6,"column":4,"offset":56},"end":{"line":6,"column":19,"offset":71},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":53},"end":{"line":6,"column":19,"offset":71},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Test automation is only part of the path that leads to better quality with CI and CD.","position":{"start":{"line":8,"column":1,"offset":73},"end":{"line":8,"column":86,"offset":158},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":73},"end":{"line":8,"column":86,"offset":158},"indent":[]}},{"type":"jsx","value":"<CodeWave>","position":{"start":{"line":10,"column":1,"offset":160},"end":{"line":10,"column":11,"offset":170},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"$ curl -s -v -o /dev/null -I -w \"%{http_code}\" http://jaffamonkey.com\n*   Trying 35.169.225.248...\n* TCP_NODELAY set\n* Expire in 149999 ms for 3 (transfer 0x55a114e985c0)\n* Expire in 200 ms for 4 (transfer 0x55a114e985c0)\n* Connected to jaffamonkey.com (35.169.225.248) port 80 (#0)\n> HEAD / HTTP/1.1\n> Host: jaffamonkey.com\n> User-Agent: curl/7.64.0\n> Accept: */*\n> \n< HTTP/1.1 301 Moved Permanently\n< Date: Fri, 26 Jul 2019 11:49:40 GMT\n< Connection:Keep-Alive\n< Content-Length: 0\n< Cache-Control: private, no-cache, no-store, max-age=0\n< Expires: Mon, 01 Jan 1990 0:00:00 GMT\n< Location: https://jaffamonkey.netlify.com\n< \n* Connection #0 to host jaffamonkey.com left intact","position":{"start":{"line":12,"column":1,"offset":172},"end":{"line":33,"column":4,"offset":861},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How to test","position":{"start":{"line":35,"column":4,"offset":866},"end":{"line":35,"column":15,"offset":877},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":863},"end":{"line":35,"column":15,"offset":877},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's all about what's appropriate, to both development and business sides to a project.","position":{"start":{"line":37,"column":1,"offset":879},"end":{"line":37,"column":88,"offset":966},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":879},"end":{"line":37,"column":88,"offset":966},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sometimes investing is a feature-rich test framework is a good idea. ","position":{"start":{"line":39,"column":1,"offset":968},"end":{"line":39,"column":70,"offset":1037},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":968},"end":{"line":39,"column":70,"offset":1037},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A test framework that is well-thought out and maintained, will retain usefulness for the whole team.","position":{"start":{"line":41,"column":1,"offset":1039},"end":{"line":41,"column":101,"offset":1139},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1039},"end":{"line":41,"column":101,"offset":1139},"indent":[]}},{"type":"code","lang":"bash","meta":"15:17","value":"$ npm install -g assert superagent\n\n// test-api.js\nconst superagent = require('superagent');\nconst assert = require('assert');\n\nsuperagent\n  .get('http://localhost:3001/api/v1/todos')\n  .end((err, res) => {\n    assert.ifError(err);\n    assert.equal(res.status, 200);\n    console.log('Result: ' + res.text)\n    });\n\n$ node test-api.js\nResult: {\"success\":\"true\",\"message\":\"todos retrieved successfully\",\"todos\":[{\"id\":1,\"title\":\"example\"}]}","position":{"start":{"line":43,"column":1,"offset":1141},"end":{"line":60,"column":4,"offset":1597},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"But if you have the build pipepline in sights, then you had better make sure tests run as lean (fast) as possible.","position":{"start":{"line":62,"column":1,"offset":1599},"end":{"line":62,"column":115,"offset":1713},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1599},"end":{"line":62,"column":115,"offset":1713},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Test engineering is where Testing meets (Dev)Ops!","position":{"start":{"line":64,"column":1,"offset":1715},"end":{"line":64,"column":50,"offset":1764},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1715},"end":{"line":64,"column":50,"offset":1764},"indent":[]}},{"type":"code","lang":"bash","meta":"1:13","value":"$ npm install -g assert superagent\n\n// test-api.js\nconst superagent = require('superagent');\nconst assert = require('assert');\n\nsuperagent\n  .get('http://localhost:3001/api/v1/todos')\n  .end((err, res) => {\n    assert.ifError(err);\n    assert.equal(res.status, 200);\n    console.log('Result: ' + res.text)\n    });\n\n$ node test-api.js\nResult: {\"success\":\"true\",\"message\":\"todos retrieved successfully\",\"todos\":[{\"id\":1,\"title\":\"example\"}]}","position":{"start":{"line":65,"column":1,"offset":1765},"end":{"line":82,"column":4,"offset":2220},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Native code or package?","position":{"start":{"line":84,"column":4,"offset":2225},"end":{"line":84,"column":27,"offset":2248},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2222},"end":{"line":84,"column":27,"offset":2248},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Writing test code is easier, and there is a raft of packages to help you ... or hinder you. ","position":{"start":{"line":86,"column":1,"offset":2250},"end":{"line":86,"column":93,"offset":2342},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2250},"end":{"line":86,"column":93,"offset":2342},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Start with too many packages, then you will quickly end up with an unused test framework.","position":{"start":{"line":88,"column":1,"offset":2344},"end":{"line":88,"column":90,"offset":2433},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2344},"end":{"line":88,"column":90,"offset":2433},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Start small - don't use a package if it can be coded natively.","position":{"start":{"line":90,"column":1,"offset":2435},"end":{"line":90,"column":63,"offset":2497},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2435},"end":{"line":90,"column":63,"offset":2497},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Conversely, don't waste too much time on native code - packages are there too help you, just be selective.","position":{"start":{"line":92,"column":1,"offset":2499},"end":{"line":92,"column":107,"offset":2605},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2499},"end":{"line":92,"column":107,"offset":2605},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The API test is a very basic example, but step up to UI tests (with reporting) and already complexitiy increases.","position":{"start":{"line":94,"column":1,"offset":2607},"end":{"line":94,"column":114,"offset":2720},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2607},"end":{"line":94,"column":114,"offset":2720},"indent":[]}},{"type":"jsx","value":"</CodeWave>","position":{"start":{"line":96,"column":1,"offset":2722},"end":{"line":96,"column":12,"offset":2733},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"blog-title\":\"jaffamonkey\",\"title\":\"Test engineering\"}","position":{"start":{"line":99,"column":1,"offset":2736},"end":{"line":99,"column":84,"offset":2819},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":99,"column":84,"offset":2819}}},"scopeImports":["import { CodeWave } from \"gatsby-theme-waves\"","import React from 'react'"],"scopeIdentifiers":["CodeWave","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"blog-title\": \"jaffamonkey\",\n  \"title\": \"Test engineering\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"test-automation\"\n  }, \"Test automation\"), mdx(\"p\", null, \"Test automation is only part of the path that leads to better quality with CI and CD.\"), mdx(CodeWave, {\n    mdxType: \"CodeWave\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ curl -s -v -o /dev/null -I -w \\\"%{http_code}\\\" http://jaffamonkey.com\\n*   Trying 35.169.225.248...\\n* TCP_NODELAY set\\n* Expire in 149999 ms for 3 (transfer 0x55a114e985c0)\\n* Expire in 200 ms for 4 (transfer 0x55a114e985c0)\\n* Connected to jaffamonkey.com (35.169.225.248) port 80 (#0)\\n> HEAD / HTTP/1.1\\n> Host: jaffamonkey.com\\n> User-Agent: curl/7.64.0\\n> Accept: */*\\n> \\n< HTTP/1.1 301 Moved Permanently\\n< Date: Fri, 26 Jul 2019 11:49:40 GMT\\n< Connection:Keep-Alive\\n< Content-Length: 0\\n< Cache-Control: private, no-cache, no-store, max-age=0\\n< Expires: Mon, 01 Jan 1990 0:00:00 GMT\\n< Location: https://jaffamonkey.netlify.com\\n< \\n* Connection #0 to host jaffamonkey.com left intact\\n\")), mdx(\"h2\", {\n    \"id\": \"how-to-test\"\n  }, \"How to test\"), mdx(\"p\", null, \"It\\u2019s all about what\\u2019s appropriate, to both development and business sides to a project.\"), mdx(\"p\", null, \"Sometimes investing is a feature-rich test framework is a good idea. \"), mdx(\"p\", null, \"A test framework that is well-thought out and maintained, will retain usefulness for the whole team.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\",\n    \"metastring\": \"15:17\",\n    \"15:17\": true\n  }), \"$ npm install -g assert superagent\\n\\n// test-api.js\\nconst superagent = require('superagent');\\nconst assert = require('assert');\\n\\nsuperagent\\n  .get('http://localhost:3001/api/v1/todos')\\n  .end((err, res) => {\\n    assert.ifError(err);\\n    assert.equal(res.status, 200);\\n    console.log('Result: ' + res.text)\\n    });\\n\\n$ node test-api.js\\nResult: {\\\"success\\\":\\\"true\\\",\\\"message\\\":\\\"todos retrieved successfully\\\",\\\"todos\\\":[{\\\"id\\\":1,\\\"title\\\":\\\"example\\\"}]}\\n\")), mdx(\"p\", null, \"But if you have the build pipepline in sights, then you had better make sure tests run as lean (fast) as possible.\"), mdx(\"p\", null, \"Test engineering is where Testing meets (Dev)Ops!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\",\n    \"metastring\": \"1:13\",\n    \"1:13\": true\n  }), \"$ npm install -g assert superagent\\n\\n// test-api.js\\nconst superagent = require('superagent');\\nconst assert = require('assert');\\n\\nsuperagent\\n  .get('http://localhost:3001/api/v1/todos')\\n  .end((err, res) => {\\n    assert.ifError(err);\\n    assert.equal(res.status, 200);\\n    console.log('Result: ' + res.text)\\n    });\\n\\n$ node test-api.js\\nResult: {\\\"success\\\":\\\"true\\\",\\\"message\\\":\\\"todos retrieved successfully\\\",\\\"todos\\\":[{\\\"id\\\":1,\\\"title\\\":\\\"example\\\"}]}\\n\")), mdx(\"h2\", {\n    \"id\": \"native-code-or-package\"\n  }, \"Native code or package?\"), mdx(\"p\", null, \"Writing test code is easier, and there is a raft of packages to help you \\u2026 or hinder you. \"), mdx(\"p\", null, \"Start with too many packages, then you will quickly end up with an unused test framework.\"), mdx(\"p\", null, \"Start small - don\\u2019t use a package if it can be coded natively.\"), mdx(\"p\", null, \"Conversely, don\\u2019t waste too much time on native code - packages are there too help you, just be selective.\"), mdx(\"p\", null, \"The API test is a very basic example, but step up to UI tests (with reporting) and already complexitiy increases.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport { CodeWave } from \"gatsby-theme-waves\"\nexport const _frontmatter = {\"blog-title\":\"jaffamonkey\",\"title\":\"Test engineering\"}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"test-automation\"\n    }}>{`Test automation`}</h2>\n    <p>{`Test automation is only part of the path that leads to better quality with CI and CD.`}</p>\n    <CodeWave mdxType=\"CodeWave\">\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}>{`$ curl -s -v -o /dev/null -I -w \"%{http_code}\" http://jaffamonkey.com\n*   Trying 35.169.225.248...\n* TCP_NODELAY set\n* Expire in 149999 ms for 3 (transfer 0x55a114e985c0)\n* Expire in 200 ms for 4 (transfer 0x55a114e985c0)\n* Connected to jaffamonkey.com (35.169.225.248) port 80 (#0)\n> HEAD / HTTP/1.1\n> Host: jaffamonkey.com\n> User-Agent: curl/7.64.0\n> Accept: */*\n> \n< HTTP/1.1 301 Moved Permanently\n< Date: Fri, 26 Jul 2019 11:49:40 GMT\n< Connection:Keep-Alive\n< Content-Length: 0\n< Cache-Control: private, no-cache, no-store, max-age=0\n< Expires: Mon, 01 Jan 1990 0:00:00 GMT\n< Location: https://jaffamonkey.netlify.com\n< \n* Connection #0 to host jaffamonkey.com left intact\n`}</code></pre>\n      <h2 {...{\n        \"id\": \"how-to-test\"\n      }}>{`How to test`}</h2>\n      <p>{`It’s all about what’s appropriate, to both development and business sides to a project.`}</p>\n      <p>{`Sometimes investing is a feature-rich test framework is a good idea. `}</p>\n      <p>{`A test framework that is well-thought out and maintained, will retain usefulness for the whole team.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\",\n          \"metastring\": \"15:17\",\n          \"15:17\": true\n        }}>{`$ npm install -g assert superagent\n\n// test-api.js\nconst superagent = require('superagent');\nconst assert = require('assert');\n\nsuperagent\n  .get('http://localhost:3001/api/v1/todos')\n  .end((err, res) => {\n    assert.ifError(err);\n    assert.equal(res.status, 200);\n    console.log('Result: ' + res.text)\n    });\n\n$ node test-api.js\nResult: {\"success\":\"true\",\"message\":\"todos retrieved successfully\",\"todos\":[{\"id\":1,\"title\":\"example\"}]}\n`}</code></pre>\n      <p>{`But if you have the build pipepline in sights, then you had better make sure tests run as lean (fast) as possible.`}</p>\n      <p>{`Test engineering is where Testing meets (Dev)Ops!`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\",\n          \"metastring\": \"1:13\",\n          \"1:13\": true\n        }}>{`$ npm install -g assert superagent\n\n// test-api.js\nconst superagent = require('superagent');\nconst assert = require('assert');\n\nsuperagent\n  .get('http://localhost:3001/api/v1/todos')\n  .end((err, res) => {\n    assert.ifError(err);\n    assert.equal(res.status, 200);\n    console.log('Result: ' + res.text)\n    });\n\n$ node test-api.js\nResult: {\"success\":\"true\",\"message\":\"todos retrieved successfully\",\"todos\":[{\"id\":1,\"title\":\"example\"}]}\n`}</code></pre>\n      <h2 {...{\n        \"id\": \"native-code-or-package\"\n      }}>{`Native code or package?`}</h2>\n      <p>{`Writing test code is easier, and there is a raft of packages to help you … or hinder you. `}</p>\n      <p>{`Start with too many packages, then you will quickly end up with an unused test framework.`}</p>\n      <p>{`Start small - don’t use a package if it can be coded natively.`}</p>\n      <p>{`Conversely, don’t waste too much time on native code - packages are there too help you, just be selective.`}</p>\n      <p>{`The API test is a very basic example, but step up to UI tests (with reporting) and already complexitiy increases.`}</p>\n    </CodeWave>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}