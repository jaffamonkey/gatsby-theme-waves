{"version":3,"sources":["webpack:///./src/gatsby-theme-blog/components/home-footer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/posts.js","webpack:///./node_modules/gatsby-theme-blog/src/templates/posts.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/gatsby-theme-blog/components/bio-content.js"],"names":["Footer","_ref","socialLinks","Object","core_browser_esm","css","mt","pt","map","platform","i","arr","react","key","url","index_esm","a","href","target","rel","name","length","div","class","src","width","h6","Posts","location","posts","siteTitle","layout","title","slice","_ref2","node","slug","keywords","seo","h2","mb","as","Link","css_browser_esm","textDecoration","to","date","p","excerpt","home_footer","__webpack_exports__","_ref$pathContext","pathContext","components_posts","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","pageResources","createElement","InternalPageRenderer","_objectSpread","json","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","theme_ui__WEBPACK_IMPORTED_MODULE_2__","h1","h4"],"mappings":"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","file":"component---node-modules-gatsby-theme-blog-src-templates-posts-js-f1222e5bf728c5e7f126.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Styled, css } from \"theme-ui\"\n\nconst Footer = ({ socialLinks }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    {socialLinks.map((platform, i, arr) => (\n      <Fragment key={platform.url}>\n        <Styled.a href={platform.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {platform.name}\n        </Styled.a>\n        {arr.length - 1 !== i && (\n          <Fragment>\n            {` `}&bull;{` `}\n          </Fragment>\n        )}\n      </Fragment>\n    ))}\n    <Fragment>\n      <br /><br />\n      <Styled.div><img class =\"gatsby-image-wrapper\" src=\"./images/code/java-plain.png\" width=\"40\"/><img class =\"gatsby-image-wrapper\" src=\"./images/code/javascript-plain.png\" width=\"40\" /><img class =\"gatsby-image-wrapper\" src=\"./images/code/php-plain.png\" width=\"40\" /><img class =\"gatsby-image-wrapper\" src=\"./images/code/python-plain.png\" width=\"40\" /><img class =\"gatsby-image-wrapper\" src=\"./images/code/swift-plain.png\" width=\"40\" /></Styled.div>\n      <br /><br />\n      <Styled.h6>Â© 2019 jaffamonkey B.V. (KVK 71855157) Vestigingsnr: 1012 RP Amsterdam</Styled.h6>\n    </Fragment>\n\n  </footer>\n)\nexport default Footer\n","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport { Styled, css } from \"theme-ui\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Footer from \"../components/home-footer\"\n\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\n  <Layout location={location} title={siteTitle}>\n    <main>\n      {posts.slice(0, 3).map(({ node }) => {\n        const title = node.title || node.slug\n        const keywords = node.keywords || []\n        return (\n          <Fragment key={node.slug}>\n            <SEO title=\"Home\" keywords={keywords} />\n            <div>\n              <Styled.h2\n                css={css({\n                  mb: 1,\n                })}\n              >\n                <Styled.a\n                  as={Link}\n                  css={{\n                    textDecoration: `none`,\n                  }}\n                  to={node.slug}\n                >\n                  {title}\n                </Styled.a>\n              </Styled.h2>\n              <small>{node.date}</small>\n              <Styled.p>{node.excerpt}</Styled.p>\n            </div>\n          </Fragment>\n        )\n      })}\n    </main>\n    <Footer socialLinks={socialLinks} />\n  </Layout>\n)\n\nexport default Posts\n","import React from \"react\"\n\nimport Posts from \"../components/posts\"\n\nexport default ({\n  pathContext: { posts, siteTitle, socialLinks },\n  location,\n}) => (\n  <Posts\n    location={location}\n    posts={posts}\n    siteTitle={siteTitle}\n    socialLinks={socialLinks}\n  />\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Fragment } from \"react\"\nimport { Styled } from \"theme-ui\"\n\n/**\n * Shadow me to add your own bio content\n */\n\nexport default () => (\n  <Fragment>\n    <Styled.h1>Quality engineering</Styled.h1>\n    <Styled.h4>Improve the quality in the build and deployment pipeline</Styled.h4>\n    {/* <Styled.img src=\"./cicd.png\"></Styled.img> */}\n  </Fragment>\n)\n"],"sourceRoot":""}