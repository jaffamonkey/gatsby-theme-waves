{"componentChunkName":"component---node-modules-gatsby-theme-blog-src-templates-post-js","path":"/qualityassurance","webpackCompilationHash":"a730afe78e2ad9aefd49","result":{"data":{"post":{"id":"59a660f3-321e-5714-bba8-80d27d39cd72","title":"Quality assurance","date":null,"excerpt":"Improve quality efforts, in all project areas. Continual improvement The rush to automate CI/CD pipelines can leave some behind, and if not…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"blog-title\": \"jaffamonkey\",\n  \"title\": \"Quality assurance\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"hr\", null), mdx(\"h3\", {\n    \"id\": \"improve-quality-efforts-in-all-project-areas\"\n  }, \"Improve quality efforts, in all project areas.\"), mdx(CodeWave, {\n    mdxType: \"CodeWave\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markdown\"\n  }), \" +-------+      +-------------+\\n | BEGIN >---+  |             |                    \\n +-------+   +--> Do you need |                    \\n                | to make a   N------+             \\n       +--------Y flowchart?  |      |             \\n       |        |             |      |             \\n       |        +-------------+      |             \\n       |                             |             \\n       |         +------------+      |             \\n       |         |            |      |             \\n +-----V-------+ | So use it. |      |             \\n |             | |            |      |             \\n | Then my     | +--^---V-----+      |             \\n | module may  |    |   |            |             \\n | help.       |    |   |            |             \\n |             >----+   |            |             \\n +-------------+        |            |              \\n                        |      +-----V-------+     \\n                        |      |             |     \\n                        |      | Then go do  |     \\n                        +------> something   |     \\n                               | else.       |     \\n                               |             |  \\n\")), mdx(\"h2\", {\n    \"id\": \"continual-improvement\"\n  }, \"Continual improvement\"), mdx(\"p\", null, \"The rush to automate CI/CD pipelines can leave some behind, and if not documented will be difficult for new people to pick up.\"), mdx(\"p\", null, \"The important stage is what is fed into the pipeline, which is what people expect as a result - and this will differ!\"), mdx(\"p\", null, \"Encouraging the business to think outside of simple user stories is a good first step.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Remember that just because a CI/CD pipeline is working well, it does not mean it is doing a good job\"), \" \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-gherkin\"\n  }), \"Feature: Testing the test website\\n  \\n  Scenario: Testing searching\\n    Given I am on test website homepage\\n    And I fill in the search field with \\\"donald trump simulator\\\"\\n    When I click the search button\\n    And the page title is \\\"donald trump simulator site:github.com at DuckDuckGo\\\"\\n    Then the first search result should contain \\\"Donald Trump\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"first-steps\"\n  }, \"First steps\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encourage Products Owners to adopt different approach to requirements.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keep areas such as security, load, accessibility and browser/device compatibility in focus early on.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Continual review of quality efforts, at all stages of the project pipeline.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encouraging the business to think outside of requirements, and understand the benefits of an exploratory mindset.\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"jaffamonkey"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"59a660f3-321e-5714-bba8-80d27d39cd72","excerpt":"Improve quality efforts, in all project areas. Continual improvement The rush to automate CI/CD pipelines can leave some behind, and if not…","slug":"/qualityassurance","title":"Quality assurance","date":null,"siteTitle":"jaffamonkey","socialLinks":[{"name":"twitter","url":"https://twitter.com/jaffamonkey"},{"name":"github","url":"https://github.com/jaffamonkey"},{"name":"linkedin","url":"https://www.linkedin.com/in/jaffamonkey"},{"name":"sms","url":"sms:+6612345678?body="},{"name":"email (if you must)","url":"mailto:paullittlebury@gmail.com"}],"previous":{"node":{"id":"c5ca29fd-50ff-5ed2-beb2-0f941dca1af9","excerpt":"Test coaching Coaching We can show your team how to do Quality Engineering, from the ground up with training that is customed to your…","slug":"/testcoaching","title":"Test coaching","date":null}},"next":null}}}